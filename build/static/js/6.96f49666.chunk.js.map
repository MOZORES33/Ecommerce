{"version":3,"sources":["Components/Auth/Register.jsx"],"names":["Register","_useState","useState","_useState2","_slicedToArray","alertaModal","setAlertaModal","_useState3","_useState4","incorrect","setIncorrect","strengthLabels","_useState5","_useState6","strength","setStrength","_useState7","username","password","_useState8","body","setBody","navigate","useNavigate","getStrength","strengthIndicator","lower","upper","numbers","i","length","char","charCodeAt","inputChange","_ref","target","name","value","_objectSpread","_defineProperty","React","createElement","className","Alerta","action","type","id","onChange","placeholder","spellCheck","evt","changePassword","concat","Fragment","onClick","axios","post","timeout","then","_ref2","data","toString","localStorage","setItem","token","catch","Link","to"],"mappings":"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","file":"static/js/6.96f49666.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Register.css'\r\nimport { Alerta } from '../../utils/Alerta/Alerta.jsx';\r\n// Importamos el Hook useState\r\nimport { useState } from 'react'\r\nimport axios from 'axios';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\n// Este componente es el registro de usuarios de la pagina\r\nconst Register = () => {\r\n    const [alertaModal, setAlertaModal] = useState(0);\r\n    const [incorrect, setIncorrect] = useState(false);\r\n    /* Declaramos la constante strengthLabels para indicar la seguridad de una contraseña */\r\n    const strengthLabels = ['debil', 'mediana', 'fuerte']\r\n    /* Declaramos la constante strength a la cual le asignamos un valor nulo*/\r\n    const [strength, setStrength] = useState(\"\");\r\n    const [body, setBody] = useState({username: '', password: ''});\r\n    const navigate = useNavigate();\r\n    \r\n    const getStrength = (password) => {\r\n        /* Declaramos la variable strengthIndicator y le asignamos el valor -1 y las variables lower, upper y numbers a las cuales le asignamos el valor false */\r\n        let strengthIndicator = -1,\r\n        lower = false,\r\n        upper = false,\r\n        numbers = false;\r\n        /* Con este for recorremos una por una todas las letras de la contraseña ingresada por el usuario. */\r\n        for (let i = 0; i < password.length; i++){\r\n            /* Declaramos la constante char en la que vamos a almacenar el valor unicode de las letras una a la vez. */\r\n            const char = password.charCodeAt (i);\r\n            /* En este if comprobamos si la variable upper es false y si el valor unicode almacenado en char corresponde a una letra mayuscula. */\r\n            if (!upper && char >= 65 && char <= 90) {\r\n                /* En este if verificamos la longitud de la contraseña es mayor a 4 o si el valor almacenado en strengthIndicator es igual a -1 lo que significa que todavia no se indicó la seguridad de la contraseña. En caso de cumplirse una de estas condiciones se incrementa en 1 el valor de la variable strengthIndicator */\r\n                upper = true;\r\n                strengthIndicator++;\r\n            }\r\n            /* En este if comprobamos si la variable numbers es false y si el valor unicode almacenado en char corresponde a un numero. */\r\n            if (!numbers && char >= 48 && char <= 57) {\r\n                /* En este if verificamos la longitud de la contraseña es mayor a 7 o si el valor almacenado en strengthIndicator es igual a -1 lo que significa que todavia no se indicó la seguridad de la contraseña. En caso de cumplirse una de estas condiciones se incrementa en 1 el valor de la variable strengthIndicator */\r\n                numbers = true;\r\n                strengthIndicator++;\r\n            }\r\n            /* En este if comprobamos si la variable lower es false y si el valor unicode almacenado en char corresponde a una letra minuscula. */\r\n            if (!lower && char >= 97 && char <= 122) {\r\n                lower = true;\r\n                strengthIndicator++;\r\n            }\r\n        }\r\n        /* Asignamos a la constante strength el nivel de seguridad de la contraseña dependiendo del valor de strengthIndicator. */\r\n        if(strengthIndicator === 2 && password.length < 8)\r\n            strengthIndicator = strengthIndicator - 1;\r\n        if(strengthIndicator === 1 && password.length < 5)\r\n            strengthIndicator = strengthIndicator - 1;\r\n        \r\n        setStrength(strengthLabels[strengthIndicator]);\r\n    };\r\n\r\n    const inputChange = ({target}) => {\r\n        setIncorrect(false)\r\n        const {name, value} = target\r\n        setBody({\r\n            ...body,\r\n            [name]: value\r\n        })\r\n    }\r\n    \r\n    const onSubmit=()=>{\r\n        if(body.password.length < 8){\r\n            setIncorrect(true)\r\n            return\r\n        }\r\n        axios.post('https://apinodejsproyectofinal-production-918e.up.railway.app/register', body, {\r\n            timeout: 10000 // Tiempo máximo de 10 segundos\r\n        })\r\n        .then(({data}) => {\r\n            if(data.toString() === 'error'){\r\n                setAlertaModal(1)\r\n                return\r\n            }\r\n            else if(data.toString() === 'existe'){\r\n                setIncorrect(true)\r\n                return\r\n            }\r\n            localStorage.setItem('token', data.token)\r\n            navigate(\"/\");\r\n        })\r\n        .catch(() => {\r\n            setAlertaModal(1);\r\n        })\r\n    }\r\n\r\n    function changePassword(evt){\r\n        getStrength(evt.target.value)\r\n        inputChange(evt)\r\n    }\r\n\r\n    return (\r\n        <div className='Register'>\r\n            {alertaModal === 1 && Alerta(setAlertaModal, 'Ocurrió un error inesperado.', 'Por favor intente nuevamente mas tarde', 1, 'Aceptar')}\r\n            <div className=\"containerRegister\">\r\n                <div className=\"img\"/>\r\n                <h3>Crea una cuenta</h3>\r\n\r\n                <form action=\"\">\r\n                    <h6>Usuario:</h6>\r\n                    <input \r\n                        type=\"text\"  \r\n                        id=\"username\" \r\n                        name=\"username\" \r\n                        onChange={inputChange}\r\n                        placeholder=\"Usuario\"/>\r\n\r\n                    <h6>Contraseña: <span>(Debe ser mayor a 8 caracteres)</span></h6>\r\n                    {/* Con el evento onChange llamamos a la constante getStrength cada vez que se realiza un cambio en el contenido del input */}\r\n                    <input \r\n                        name=\"password\" \r\n                        spellCheck=\"false\"\r\n                        type=\"password\"\r\n                        placeholder=\"Contraseña\"\r\n                        onChange={evt => changePassword(evt)}/>\r\n\r\n                    {/* Asignamos una clase con el nombre almacenado en la constante strength */}\r\n                    <div className={`bars ${strength}`}>\r\n                        <div></div>\r\n                    </div>\r\n                    {/* Indicamos la seguridad de la contraseña mostrando la palabra contraseña seguido del valor de la variable strength */}\r\n                    <div className=\"strength\">{strength &&<>Contraseña {strength}</>}</div>\r\n                    <div className={`incorrectRegister ${incorrect? 'activeincorrectRegister': ''}`}>Usuario existente o contraseña demasiado corta.</div>\r\n                    <input \r\n                        type=\"button\" \r\n                        value=\"Registrarse\" \r\n                        onClick={onSubmit}/>\r\n                </form>\r\n                <p className='RLogin'>¿Ya tienes cuenta? <Link to={\"/login\"}>Inicia sesión</Link></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register"],"sourceRoot":""}