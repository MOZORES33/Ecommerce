{"version":3,"sources":["assets/img/Slider/slider1.jpg","assets/img/Slider/slider2.jpg","assets/img/Slider/slider3.jpg","assets/img/Slider/slider4.jpg","Components/Main/Main.jsx"],"names":["module","exports","__webpack_require__","p","Main","_ref","allProducts","setAllProducts","countProducts","setCountProducts","total","setTotal","products","categorias","setAnimate","sectionProductos","_useState","sectionInicio","useState","_useState2","_slicedToArray","detailModal","setDetailModal","_useState3","_useState4","productModal","setProductModal","images","slider1","slider2","slider3","slider4","_useState5","_useState6","animation","setAnimation","_useState7","_useState8","timeInterval","setTimeInterval","onAddProduct","product","find","item","id","map","_objectSpread","stock","precio","animationSum","_toConsumableArray","concat","document","getElementById","textContent","style","color","setTimeout","nextImage","time","length","useEffect","interval","setInterval","clearInterval","React","createElement","className","image","index","key","src","alt","onClick","ref","urlImage","nombre","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","categoria","descripcion"],"mappings":"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","file":"static/js/3.10cc9821.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/slider1.a778723e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slider2.7dca34cd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slider3.c7c6ad72.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slider4.21d4ca3c.jpg\";","import React, { useState, useEffect } from 'react'\r\nimport './Main.css'\r\nimport slider1 from '../../assets/img/Slider/slider1.jpg';\r\nimport slider2 from '../../assets/img/Slider/slider2.jpg';\r\nimport slider3 from '../../assets/img/Slider/slider3.jpg';\r\nimport slider4 from '../../assets/img/Slider/slider4.jpg';\r\n\r\n// Este componente es el cuerpo de la pagina\r\nconst Main = ({allProducts, setAllProducts, countProducts, setCountProducts, total, setTotal, products, categorias, setAnimate, sectionProductos, sectionInicio}) => {\r\n    const [detailModal, setDetailModal] = useState(false);\r\n    const [productModal, setProductModal] = useState({});\r\n    const images = [slider1, slider2, slider3, slider4];\r\n    const [animation, setAnimation] = useState(0);\r\n    const [timeInterval, setTimeInterval] = useState(5000);\r\n    // Metodo para añadir productos al carrito\r\n    const onAddProduct = product => {\r\n        /* Verificamos si el id del producto coincide con el id de algun \r\n        producto almacenado en el carrito */\r\n        if(allProducts.find(item => item.id === product.id)){\r\n            const products = allProducts.map(item => item.id === product.id? {...item, stock: item.stock + 1} : item);\r\n            setTotal(total + product.precio * product.stock);\r\n            setCountProducts(countProducts + product.stock);\r\n            animationSum();\r\n            return setAllProducts([...products]);\r\n        }\r\n        /* Si no se cumple la condición agregamos el producto al carrito.\r\n        */\r\n        /* Asignamos a la constante total el nuevo monto sumando el \r\n        precio por la cantidad del producto agregado */\r\n        setTotal(total + product.precio * product.stock);\r\n        /* Asignamos a la constante countProducts la nueva cantidad \r\n        sumando la cantidad agregada */\r\n        setCountProducts(countProducts + product.stock);\r\n        /* Asignamos a la variable allProducts los productos agregados \r\n        anteriormente mas el nuevo producto */\r\n        setAllProducts([...allProducts, product]);\r\n        /* Llamamos a la funcion animationSum para iniciar una animación \r\n        */\r\n        animationSum();\r\n    };\r\n    \r\n    /* Funcion para iniciar una animacion */\r\n    function animationSum(){\r\n        /* Asignamos el valor +1 al elemento con id 'animado' */\r\n        document.getElementById('animado').textContent = '+1';\r\n        /* Asignamos un color al elemento con id 'animado' */\r\n        document.getElementById('animado').style.color = \"rgb(13, 255, 0)\";\r\n        /* Asignamos el valor 1 a la constante animate */\r\n        setAnimate(1)\r\n        /* Con la función setTimeout asignamos un valor nulo al elemento \r\n        con id 'animado' y el valor 0 a la constante animate luego de \r\n        haber transcurrido 300ms */\r\n        setTimeout(function(){document.getElementById('animado').textContent = ''\r\n            setAnimate(0)\r\n        }, 300)\r\n    }\r\n    \r\n    function nextImage(time){\r\n        setTimeInterval(time)\r\n        if(animation !== images.length - 1)\r\n            setAnimation(animation + 1)\r\n        else\r\n            setAnimation(0)\r\n    }\r\n    \r\n    function prevImage(time){\r\n        setTimeInterval(time)\r\n        if(animation !== 0)\r\n            setAnimation(animation - 1)\r\n        else\r\n            setAnimation(images.length - 1)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            nextImage(5000);\r\n        }, timeInterval);\r\n        return() => clearInterval(interval);\r\n    });\r\n\r\n    return (\r\n        <div className=\"main\" >\r\n            <div className=\"containerSliderPrincipal\">\r\n                <div className=\"sliderPrincipal\" id='sliderPrincipal'>\r\n                    {images.length ? images.map((image, index) => (\r\n                        // Creamos un div y le añadimos la clase card y el id del producto con product.id\r\n                        <div className={`sliderSection ${animation === index ? 'carrouselActive' : ''}`} key={'imageSlider' + index}>\r\n                            <img src={image} alt=\"\" className={'imgSliderPrincipal'} />\r\n                        </div>\r\n                    )): (\r\n                        <div className=\"sliderNotFound\">\r\n                            <h1>\"La Familia\"<br/>Distribuidora</h1>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"containerBtn sliderbtnLeft\" id='sliderbtnLeft' onClick={() => prevImage(10000)}><i className='fa fa-angle-left'/></div>\r\n                <div className=\"containerBtn sliderbtnRight\" id='sliderbtnRight' onClick={() => nextImage(10000)}><i className='fa fa-angle-right'/></div>\r\n            </div>\r\n            \r\n            {/* Mostramos con el h1 el valor de la constante categoria */}\r\n            <h1 className='title' ref={sectionProductos}>{categorias !== \"\"? categorias : \"TODOS\"}</h1>\r\n            <div className=\"container_card\">\r\n                {/* Comprobamos si products es distinto de nulo. En caso de cumplirse la condicion se muestran los productos. En caso contrario se muestra un mensaje indicando que no se encontraron productos */}\r\n                {/* Aquí ejecutamos un map para mostrar todos los productos que se encuentran cargados en el archivo data.js */}\r\n                {/* Con la constante product vamos añadiendo todos los productos que se encuentran en data.js */}\r\n                {products.length ? products.map(product => (\r\n                    // Creamos un div y le añadimos la clase card y el id del producto con product.id\r\n                    <div className=\"card\" key={product.id}>\r\n                        {/* Cargamos la imagen con product.urlImage y el nombre del producto en alt con product.nombre */}\r\n                        <center>   <img src={`https://apinodejsproyectofinal-production-918e.up.railway.app/imagenes/${product.urlImage}`} alt={product.urlImage} /> </center>\r\n                        {/* Mostramos el nombre del producto con product.nombre */}\r\n                        <h6>{product.nombre}</h6>\r\n                        {/* Mostramos el precio del producto con product.precio */}\r\n                        <p>${product.precio}</p>\r\n                        <div className=\"detail_product\">\r\n                            <p onClick={() => {setDetailModal(true); setProductModal(product)}}>Ver detalles</p>\r\n                        </div>\r\n                        {/* Creamos un boton y le añadimos el evento onClick para que cuando se precione ejecute el metodo onAddProduct que añade el producto al carrito*/}\r\n                        <button onClick={() => onAddProduct(product)}>Añadir al carrito</button>\r\n                    </div>\r\n                )): (\r\n                    <div className=\"productNotFound\">\r\n                        <h1>No se encontraron productos en la categoria \"{categorias !== \"\"? categorias : \"TODOS\"}\"</h1>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            \r\n            <div className={`container_modal_products_details ${detailModal? 'activecontainerModal' : ''}`}>\r\n                <div className=\"container_details\">\r\n                \r\n                    {productModal ? (\r\n                        <div className=\"card_details\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n                                fill=\"none\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                strokeWidth=\"1.5\"\r\n                                stroke=\"currentColor\"\r\n                                className=\"Hicon-close\"\r\n                                onClick={() => {setDetailModal(false); setProductModal({})}}>\r\n                                <path\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                    d=\"M6 18L18 6M6 6l12 12\"\r\n                                />\r\n                            </svg>\r\n                            <div className=\"card__image\">\r\n                                <img src={productModal.urlImage? `https://apinodejsproyectofinal-production-918e.up.railway.app/imagenes/${productModal.urlImage}`: \"\"} alt={productModal.urlImage} />\r\n                            </div>\r\n                            <div className=\"card__content\">\r\n                                <div className=\"card__content__tag\">\r\n                                    <span className=\"tag\">{productModal.categoria ? productModal.categoria: \"\"}</span>\r\n                                </div>\r\n                                <p className=\"card__content__title\">{productModal.nombre}</p>\r\n                                <p className=\"card__content__info\">{productModal.descripcion}</p>\r\n                                <div className=\"card__content__config\">\r\n                                    <div className=\"price\">\r\n                                        <span className=\"price\">${productModal.precio}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <button className='card__content__action' onClick={() => onAddProduct(productModal)}><i className=\"fa fa-shopping-cart\"></i> Añadir al carrito</button>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"productNotFound\">\r\n                            <h1>Ocurrió un error al intentar mostrar el producto. Por favor intente mas tarde.</h1>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main\r\n"],"sourceRoot":""}